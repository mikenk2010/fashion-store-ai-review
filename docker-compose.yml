version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: fashion_store_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ecommerce_db
    volumes:
      - mongo_data:/data/db
      - ./src/config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - fashion_store_network

  # ML Model Training Service (runs once)
  trainer:
    build: .
    container_name: fashion_store_trainer
    environment:
      - MONGO_URI=mongodb://admin:password123@mongo:27017/ecommerce_db?authSource=admin
    depends_on:
      - mongo
    volumes:
      - ./data:/app/data:ro
      - ./models:/app/models
    networks:
      - fashion_store_network
    command: >
      sh -c "
        echo 'Waiting for MongoDB to be ready...' &&
        sleep 20 &&
        echo 'Training ML models...' &&
        python -m src.models.train_models &&
        echo 'Model training completed!'
      "
    profiles:
      - training

  # Flask Application
  web:
    build: .
    container_name: fashion_store_web
    restart: unless-stopped
    ports:
      - "6600:6600"
    environment:
      - MONGO_URI=mongodb://admin:password123@mongo:27017/ecommerce_db?authSource=admin
      - FLASK_ENV=production
      - HOST=0.0.0.0
      - PORT=6600
    depends_on:
      - mongo
    volumes:
      - ./data:/app/data:ro
      - ./models:/app/models
      - ./.env:/app/.env:ro
    networks:
      - fashion_store_network
    command: >
      sh -c "
        echo 'Waiting for MongoDB to be ready...' &&
        sleep 10 &&
        echo 'Running complete setup...' &&
        python -m src.utils.complete_setup &&
        echo 'Starting application...' &&
        python main.py
      "

volumes:
  mongo_data:

networks:
  fashion_store_network:
    driver: bridge
